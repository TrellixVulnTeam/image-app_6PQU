{"ast":null,"code":"var _jsxFileName = \"/var/www/image-app/src/components/EditImage.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst convertBase64 = file => {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(file);\n\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n\n    fileReader.onerror = error => {\n      reject(error);\n    };\n  });\n};\n\nclass EditImage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: this.props.location.state.image.title,\n      image: this.props.location.state.image.image,\n      description: this.props.location.state.image.description\n    };\n\n    this.changeHandler = async event => {\n      const file = event.target.files[0];\n      const base64 = await convertBase64(file);\n      console.log(base64);\n      this.setState({\n        'image': base64\n      });\n    };\n\n    this.handleSubmission = event => {\n      event.preventDefault();\n      console.log(event.target.image);\n      const formData = new FormData();\n\n      if (this.state.title === \"\" || this.state.description === \"\") {\n        alert(\"All fields need to be fill..\");\n        return;\n      }\n\n      this.props.editImageHandler(this.state);\n      this.setState({\n        title: \"\",\n        image: null,\n        description: \"\"\n      });\n      this.props.history.push(\"/\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui main add-contact\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui header\",\n          children: [\"Edit Image - [\", this.state.title, \"]\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"ui form\",\n          onSubmit: this.handleSubmission,\n          enctype: \"multipart/form-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              placeholder: \"Title\",\n              value: this.state.title,\n              onChange: e => this.setState({\n                title: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"image\",\n              onChange: this.changeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.state.image,\n              className: \"image\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"description\",\n              cols: \"30\",\n              rows: \"10\",\n              onChange: e => this.setState({\n                description: e.target.value\n              }),\n              children: this.state.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui button\",\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EditImage;","map":{"version":3,"sources":["/var/www/image-app/src/components/EditImage.js"],"names":["React","convertBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","EditImage","Component","state","title","props","location","image","description","changeHandler","event","target","files","base64","console","log","setState","handleSubmission","preventDefault","formData","FormData","alert","editImageHandler","history","push","render","e","value"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst convertBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n        const fileReader = new FileReader();\n        fileReader.readAsDataURL(file)\n        fileReader.onload = () => {\n            resolve(fileReader.result);\n        }\n        fileReader.onerror = (error) => {\n            reject(error);\n        }\n    })\n}\n\nclass EditImage extends React.Component {\n    state = {\n        title: this.props.location.state.image.title,\n        image : this.props.location.state.image.image,\n        description: this.props.location.state.image.description\n    }\n    changeHandler = async (event) => {\n        const file = event.target.files[0]\n        const base64 = await convertBase64(file)\n        console.log(base64);\n        this.setState({'image': base64})\n    };\n\n    handleSubmission = (event) => {\n        event.preventDefault();\n        console.log(event.target.image);\n        const formData = new FormData();\n        if(this.state.title === \"\" || this.state.description === \"\") {\n            alert(\"All fields need to be fill..\");\n            return;\n        }\n        this.props.editImageHandler(this.state);\n        this.setState({title:\"\", image: null, description:\"\"});\n        this.props.history.push(\"/\");\n    };\n\n    render() {\n        return (\n            <div className=\"ui main add-contact\">\n                <div className=\"ui container\">\n                    <div className=\"ui header\">Edit Image - [{this.state.title}]</div>\n                    <form className=\"ui form\" onSubmit={this.handleSubmission}  enctype=\"multipart/form-data\">\n                        <div className=\"field\">\n                            <label>Title</label>\n                            <input type=\"text\"\n                                   name=\"title\"\n                                   placeholder=\"Title\"\n                                   value={this.state.title}\n                                   onChange={ (e) => this.setState({title: e.target.value}) } />\n                        </div>\n                        <div className=\"field\">\n                            <label>Image</label>\n                            <input type=\"file\"\n                                   name=\"image\"\n                                   onChange={this.changeHandler}/>\n                        </div>\n                        <div className=\"field\">\n                            <img src={this.state.image} className=\"image\" alt=\"\"/>\n                        </div>\n                        <div className=\"field\">\n                            <label>Description</label>\n                            <textarea name=\"description\"\n                                      cols=\"30\"\n                                      rows=\"10\"\n                                      onChange={ (e) => this.setState({description: e.target.value}) } >\n                                {this.state.description}\n                            </textarea>\n                        </div>\n                        <button className=\"ui button\" type=\"submit\" >Add</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default EditImage;\n"]},"metadata":{},"sourceType":"module"}